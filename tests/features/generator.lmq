/*
function fibonacci() {
  let last = 0;
  let current = yield 1;
  let next = 1;

  while (true) { 
    current = last + current;
    last = current - last;
    next = yield current;
  }
}

const generator = fibonacci();
println("Testing Infinite Fibonacci number generator: ${generator}");
let i = 1;
while (i <= 10) {
  println("Fibonacci number at index ${i}: ${generator.next().value()}");
  i++;
}
*/

println("");

function innerGenerator() {
  println("Inner Generator starts...");
  yield 2;
  yield 3;
  println("Inner Generator ends...");
}

function middleGenerator(){
  println("Middle Generator starts...");
  yield 1;
  yield from innerGenerator();
  yield 4;
  println("Middle Generator ends...");
}

function outerGenerator() { 
  println("Outer Generator start...");
  yield 0;

  yield from middleGenerator();

  yield 5;
  println("Outer Generator ends...");
}

println("Testing nested generators: ");
const generator2 = outerGenerator();
while (!generator2.nextFinished()) { 
  println("Generator yield value: ${generator2.value()}");
}
