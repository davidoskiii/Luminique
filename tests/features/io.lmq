using luminique.std.io.File;
using luminique.std.io.FileReadStream;
using luminique.std.io.FileWriteStream;
using luminique.std.io.BinaryReadStream;
using luminique.std.io.BinaryWriteStream;

let fileIn = File("tests/io_output/file_input.txt");
println(fileIn);

println("Creating a read stream for input file. ");
let fileReader = FileReadStream(fileIn);

println("The first character of the file is: " + fileReader.peek());
println("");

println("Now reading the entire file:");
print("\n");

while(!fileReader.isAtEnd()){
  print(fileReader.nextLine());
}

print("\n\n");

print("File stream is at end: ");
println(fileReader.isAtEnd());

println("Closing read stream for file.");
fileReader.close();

let fileOut = File("tests/io_output/file_output.txt");

println(fileOut);
println("Creating a write stream for out file.");

let fileWriter = FileWriteStream(fileOut);
print("\n");

println("Now write character 'B' to file.");
fileWriter.put("B");

println("Then write a new line, and string 'x = 32'.");
fileWriter.putLine();
fileWriter.putString("x = 32");

println("Then write a new line, and string 'Hello World!'.");
fileWriter.putLine();
fileWriter.putString("Hello World!");

println("Close write stream for file.");
fileWriter.close();

print("\n");

let binaryFileIn = File("tests/io_output/file_binary.bin");
println(binaryFileIn);

println("Creating a binary read stream.");
println("Now read the binary file to the screen:");

let binaryReader = BinaryReadStream(binaryFileIn);
while(!binaryReader.isAtEnd()){
  print(binaryReader.next());
  print(" ");
}

print("\n");

binaryReader.close();

print("\n");

let fileBinaryOut = File("tests/io_output/file_binary.bin");
println(fileBinaryOut);
println("Creating a binary write stream.");
print("Now write to a binary file with the following bytes: ");

let binaryWriter = BinaryWriteStream(fileBinaryOut);
let bytes = [5, 37, 0, 88, 255, 12];

println(bytes);
binaryWriter.putBytes(bytes);
println("Close binary write stream.");
binaryWriter.close();
