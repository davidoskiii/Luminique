using luminique::std::collection::LinkedList;

let list = LinkedList();

println("Testing class LinkedList...");

println("Class for linked list object: ${list.getClassName()}");

print("Linked list is currently empty: ");
println(list.isEmpty());

println("");

list.add(2);
list.add(3.5);
list.add(true);
list.add(nil);
list.add("Hello World");

print("Initial elements in linked list: ");
println(list);

print("Linked list contains element 3.5: ");
println(list.contains(3.5));

print("Element at index 3 of linked list: ");
println(list.getAt(3));

println("");

println("Add a new element current date to the end of linked list: ");

print("Current elements in linked list: ");
println(list);

println("Add a new element 0 to the start of linked list: ");

list.addFirst(0);

print("Current elements in linked list: ");
println(list);

println("Add a new element false to the index 4: ");

list.addAt(4, false);
println(list);

println("");

print("Removing first element from linked list: ");
list.remove();

println(list);
print("Removing last element from linked list: ");

list.removeLast();
println(list);

println("");

println("Looping through elements in linked list...");

for (element : list) {
  println("Element: ${element}");
}

println("");

println("Clearing linked list: ");

list.clear();

print("Current elements in linked list: ");
println(list);
