using luminique::std::chrono::Timer;

const promise = Promise(function (fulfill, reject) {
  Timer.timeout(lambda [] { fulfill("Hello.") }, 500);
});

println("Promise created: ${promise}");
promise.then(function (value) { 
         println("First Promise fulfilled: ${value}"); 
         return Promise(function (fulfill, reject){ 
           Timer.timeout(lambda [] { fulfill("Nice to meet you.") }, 1000);
         });
       })
       .then(function (value) { 
         println("Second Promise fulfilled: ${value}");
         return Promise(function (fulfill, reject) {
           Timer.timeout(lambda [] { fulfill("How are you doing?") }, 1500); 
         });
       })
       .then(function (value) { 
         println("Third Promise fulfilled: ${value}");
         return Promise(function (fulfill, reject) {
           Timer.timeout(lambda [] { fulfill("Goodbye") }, 2000); 
         });
       })
       .then(function (value) {
         println("Last Promise fulfilled: ${value}");
       })
       .catch(lambda [exception] { println("Promise failed: ${exception.message}") });
